GOL={abstractFn:function(){throw new Error("Abstract function called directly.")},unsupportedFn:function(a){return function(){throw new Error("Unsupported operation: "+a)}}};Ext.define("GOL.Application",{extend:"Ext.window.Window",closable:false,constrain:true,resizable:false,initComponent:function(){var b=new GOL.model.factory.AgingCellFactory();var c=new GOL.rules.StandardRules();this.gridController=new GOL.controller.Grid(this.rows,this.cols,b,c);this.gridController.applyPattern(GOL.pattern.Registry.getDefaultValue());this.toolbar=this.createToolbar();var a=this.gridController.getView();a.on("beforeload",this.toolbar.disable,this.toolbar);a.on("load",this.toolbar.enable,this.toolbar);Ext.apply(this,{title:"Conway's Game of Life",items:a,tools:[{type:"help",handler:this.showHelp,scope:this}],bbar:this.toolbar});this.callParent()},launch:function(){this.show()},createToolbar:function(){return Ext.create("GOL.Toolbar",{gridController:this.gridController})},showHelp:function(){var a='<a href="http://en.wikipedia.org/wiki/Conways_Game_of_Life" target="_blank">Wikipedia</a>';Ext.Msg.show({title:"Help",buttons:Ext.MessageBox.OK,icon:Ext.MessageBox.QUESTION,width:450,msg:"A implementation of Conway's Game of Life using JavaScript and Ext JS 4 in the MVC paradigm.<br /><br /><p>For details behind Conway's Game of Life, see "+a+".<br /><br /><p>Directions: Use the controls on the bottom toolbar to configure the grid. Click and drag over Cells to bring them back to life.<br /><br />By: Alan Rahlf"})}});Ext.define("GOL.Toolbar",{extend:"Ext.toolbar.Toolbar",millisPerIteration:50,iconClsBomb:"gol-icon-bomb",iconClsRewind:"gol-icon-rewind",iconClsPlay:"gol-icon-play",iconClsPause:"gol-icon-pause",iconClsNext:"gol-icon-next",initComponent:function(){this.items=this.createItems();this.callParent()},triggerNextGeneration:function(){this.gridController.nextGeneration()},isPlaying:function(){return !!this.intervalId},createItems:function(){var a=Ext.create("Ext.toolbar.TextItem",{text:"Generations: 0"});return[this.createIconButton(this.iconClsBomb,this.onBombClick),"-",this.createIconButton(this.iconClsRewind,this.onRewindClick),this.createIconButton(this.iconClsPlay,this.onPlayClick),this.createIconButton(this.iconClsNext,this.onNextClick),"-",{xtype:"golmenubutton",registry:GOL.cell.Registry,text:"Cell Type",selectHandler:this.onCellTypeSelect,scope:this},"-",{xtype:"golmenubutton",itemId:"patternMenu",registry:GOL.pattern.Registry,text:"Pattern",selectHandler:this.onPatternSelect,scope:this},"->",a]},createIconButton:function(a,b){return Ext.create("Ext.button.Button",{iconCls:a,handler:b,scope:this})},onBombClick:function(){this.gridController.killAllCells()},onRewindClick:function(){this.gridController.applyPattern(this.down("#patternMenu").getValue())},onPlayClick:function(a){if(!this.isPlaying()){a.setIconCls(this.iconClsPause);this.intervalId=setInterval(Ext.bind(this.triggerNextGeneration,this),this.millisPerIteration)}else{a.setIconCls(this.iconClsPlay);clearInterval(this.intervalId);delete this.intervalId}},onNextClick:function(){if(!this.isPlaying()){this.triggerNextGeneration()}},onPatternSelect:function(a,b){this.gridController.applyPattern(b.getValue())},onCellTypeSelect:function(a,b){this.gridController.reconfigure(b.getValue());this.gridController.applyPattern(this.down("#patternMenu").getValue())}});Ext.define("GOL.rules.Rules",{applyRules:GOL.abstractFn});Ext.define("GOL.rules.StandardRules",{extend:"GOL.rules.Rules",applyRules:function(a){var b=a.getAliveNeighborsCount();if(a.isAlive()){if(b>3||b<2){a.kill()}else{a.persist()}}else{if(b==3){a.revive()}}}});Ext.define("GOL.registry.Register",{extend:"Ext.data.Model",fields:["name","value"],getName:function(){return this.get("name")},getValue:function(){return this.get("value")}});Ext.define("GOL.registry.Registry",{constructor:function(){this.store=new Ext.data.Store({model:"GOL.registry.Register"})},register:function(a,b){this.store.add({name:a,value:b})},getStore:function(){return this.store},getDefaultValue:function(){return this.store.first().getValue()}});Ext.define("GOL.registry.MenuButton",{alias:"widget.golmenubutton",extend:"Ext.button.Button",initComponent:function(){var b=[],a=this.registry.getStore();a.each(function(c){b.push({register:c,text:c.get("name")})});Ext.apply(this,{labelText:this.text,menu:{items:b,listeners:{click:this.onMenuItemClick,scope:this}}});this.addEvents("select");if(Ext.isFunction(this.selectHandler)){this.on("select",this.selectHandler,this.scope)}this.setSelectedRegister(a.first(),true);this.callParent()},onMenuItemClick:function(c,a,b){this.setSelectedRegister(a.register)},setSelectedRegister:function(b,a){if(this.selectedRegister!=b){this.selectedRegister=b;this.setText(this.labelText+": "+b.getName());if(!a){this.fireEvent("select",this,b)}}},getValue:function(){return this.selectedRegister.getValue()}});Ext.define("GOL.pattern.Pattern",{applyPattern:GOL.abstractFn});Ext.define("GOL.pattern.AbstractCoordinatePattern",{extend:"GOL.pattern.Pattern",applyCoordinates:function(b,c){var d;for(var a=0;a<c.length;a++){d=c[a];b.getCell(d[1],d[0]).revive().commit()}}});Ext.ns("GOL.pattern");GOL.pattern.Registry=new GOL.registry.Registry();GOL.registerPattern=Ext.bind(GOL.pattern.Registry.register,GOL.pattern.Registry);Ext.define("GOL.pattern.Random",{extend:"GOL.pattern.Pattern",applyPattern:function(a){a.eachCell(function(b){if(Math.random()>0.5){b.kill()}else{b.revive()}b.commit()})}});GOL.registerPattern("Random",new GOL.pattern.Random());Ext.define("GOL.pattern.Beacon",{extend:"GOL.pattern.AbstractCoordinatePattern",applyPattern:function(a){var b=[[1,1],[1,2],[2,1],[4,3],[3,4],[4,4]];this.applyCoordinates(a,b)}});GOL.registerPattern("Beacon",new GOL.pattern.Beacon());Ext.define("GOL.pattern.Glider",{extend:"GOL.pattern.AbstractCoordinatePattern",applyPattern:function(a){var b=[[1,1],[2,2],[3,2],[1,3],[2,3]];this.applyCoordinates(a,b)}});GOL.registerPattern("Glider",new GOL.pattern.Glider());Ext.define("GOL.pattern.GliderGun",{extend:"GOL.pattern.AbstractCoordinatePattern",applyPattern:function(a){var b=[[2,6],[2,7],[3,6],[3,7],[12,6],[12,7],[12,8],[13,5],[13,9],[14,4],[14,10],[15,4],[15,10],[16,7],[17,5],[17,9],[18,6],[18,7],[18,8],[19,7],[22,4],[22,5],[22,6],[23,4],[23,5],[23,6],[24,3],[24,7],[26,2],[26,3],[26,7],[26,8],[36,4],[36,5],[37,4],[37,5]];this.applyCoordinates(a,b)}});GOL.registerPattern("Glider Gun",new GOL.pattern.GliderGun());Ext.define("GOL.pattern.LWSS",{extend:"GOL.pattern.AbstractCoordinatePattern",applyPattern:function(a){var b=[[1,1],[4,1],[5,2],[1,3],[5,3],[2,4],[3,4],[4,4],[5,4]];this.applyCoordinates(a,b)}});GOL.registerPattern("LWSS",new GOL.pattern.LWSS());Ext.define("GOL.pattern.Pulsar",{extend:"GOL.pattern.AbstractCoordinatePattern",applyPattern:function(a){var b=[[4,2],[5,2],[6,2],[10,2],[11,2],[12,2],[2,4],[7,4],[9,4],[14,4],[2,5],[7,5],[9,5],[14,5],[2,6],[7,6],[9,6],[14,6],[4,7],[5,7],[6,7],[10,7],[11,7],[12,7],[4,9],[5,9],[6,9],[10,9],[11,9],[12,9],[2,10],[7,10],[9,10],[14,10],[2,11],[7,11],[9,11],[14,11],[2,12],[7,12],[9,12],[14,12],[4,14],[5,14],[6,14],[10,14],[11,14],[12,14]];this.applyCoordinates(a,b)}});GOL.registerPattern("Pulsar",new GOL.pattern.Pulsar());Ext.define("GOL.model.Grid",{mixins:{observable:"Ext.util.Observable"},constructor:function(a,b,d,c){Ext.apply(this,{rows:a,cols:b,rules:c,generations:0});this.addEvents("generationchange","reconfigure");this.configure(d)},configure:function(f){var a=this.cells=[],d;for(var b=0;b<this.rows;b++){d=[];for(var e=0;e<this.cols;e++){d.push(f.createModel(b,e))}a.push(d)}this.compositeCell=new GOL.model.CompositeCell(Ext.Array.flatten(a));this.compositeCell.each(this.assignCellNeighbors,this)},reconfigure:function(a){Ext.destroy(this.cells);this.configure(a);this.fireEvent("reconfigure")},assignCellNeighbors:function(a){var f=a.getRow(),b=a.getCol(),d=[];for(var e=f-1;e<=f+1;e++){for(var g=b-1;g<=b+1;g++){if(this.cells[e]&&this.cells[e][g]&&this.cells[e][g]!=a){d.push(this.cells[e][g])}}}a.setNeighbors(d)},getRows:function(){return this.rows},getCols:function(){return this.cols},getCell:function(b,a){return this.cells[b][a]},killAllCells:function(){this.compositeCell.kill().commit();this.fireEvent("generationchange",(this.generations=0))},eachCell:function(b,a){this.compositeCell.each(b,a)},nextGeneration:function(){var a=this.compositeCell.getCells();for(var b=0;b<a.length;b++){this.rules.applyRules(a[b])}this.compositeCell.commit();this.fireEvent("generationchange",++this.generations)},applyPattern:function(a){this.killAllCells();a.applyPattern(this)}});Ext.define("GOL.model.Cell",{mixins:{observable:"Ext.util.Observable"},constructor:function(){this.addEvents("commit")},getRow:GOL.abstractFn,getCol:GOL.abstractFn,commit:GOL.abstractFn,getAliveNeighborsCount:GOL.abstractFn,setNeighbors:GOL.abstractFn,getAge:GOL.abstractFn,isAlive:GOL.abstractFn,persist:GOL.abstractFn,revive:GOL.abstractFn,kill:GOL.abstractFn,destroy:GOL.abstractFn});Ext.define("GOL.model.AbstractCell",{extend:"GOL.model.Cell",constructor:function(b,a){this.row=b;this.col=a;this.callParent()},getRow:function(){return this.row},getCol:function(){return this.col},commit:function(){this.onCommit();this.fireEvent("commit",this);return this},onCommit:GOL.abstractFn,getAliveNeighborsCount:function(){var c=0,b=this.neighbors;for(var a=0;a<b.length;a++){if(b[a].isAlive()){c++}}return c},getNeighbors:function(){return this.neighbors},setNeighbors:function(a){this.neighbors=a},destroy:function(){this.neighbors=null}});Ext.define("GOL.model.CompositeCell",{extend:"GOL.model.Cell",constructor:function(a){this.callParent();this.cells=a},getCells:function(){return this.cells},each:function(b,a){Ext.Array.forEach(this.cells,b,a);return this},forEachCell:function(a){for(var b=0;b<this.cells.length;b++){(this.cells[b])[a]()}return this},kill:function(){return this.forEachCell("kill")},revive:function(){return this.forEachCell("revive")},persist:function(){return this.forEachCell("persist")},commit:function(){return this.forEachCell("commit")},getRow:GOL.unsupportedFn("CompositeCell.getRow"),getCol:GOL.unsupportedFn("CompositeCell.getCol"),getAliveNeighborsCount:GOL.unsupportedFn("CompositeCell.getAliveNeighborsCount"),setNeighbors:GOL.unsupportedFn("CompositeCell.setNeighbors"),getAge:GOL.unsupportedFn("CompositeCell.getAge"),isAlive:GOL.unsupportedFn("CompositeCell.isAlive")});Ext.define("GOL.model.BinaryCell",{extend:"GOL.model.AbstractCell",alive:false,tempAlive:false,getAge:function(){return this.alive?1:0},isAlive:function(){return this.alive},onCommit:function(){this.alive=this.tempAlive},kill:function(){this.tempAlive=false;return this},persist:function(){return this},revive:function(){this.tempAlive=true;return this}});Ext.define("GOL.model.AgingCell",{extend:"GOL.model.AbstractCell",age:0,tempAge:0,isAlive:function(){return this.age>0},getAge:function(){return this.age},onCommit:function(){this.age=this.tempAge},kill:function(){this.tempAge=0;return this},persist:function(){if(this.tempAge>0){this.tempAge++}return this},revive:function(){this.tempAge=1;return this}});Ext.define("GOL.model.RainbowCell",{extend:"GOL.model.AgingCell",MAX_AGE:7,persist:function(){if(this.age<this.MAX_AGE&&this.tempAge<this.MAX_AGE){this.tempAge++}return this}});Ext.ns("GOL.cell");GOL.cell.Registry=new GOL.registry.Registry();GOL.registerCellFactory=Ext.bind(GOL.cell.Registry.register,GOL.cell.Registry);Ext.define("GOL.model.factory.CellFactory",{createCell:GOL.abstractFn,});Ext.define("GOL.model.factory.AgingCellFactory",{extend:"GOL.model.factory.CellFactory",createModel:function(b,a){return new GOL.model.AgingCell(b,a)}});GOL.registerCellFactory("Aging",new GOL.model.factory.AgingCellFactory());Ext.define("GOL.model.factory.BinaryCellFactory",{extend:"GOL.model.factory.CellFactory",createModel:function(b,a){return new GOL.model.BinaryCell(b,a)}});GOL.registerCellFactory("Binary",new GOL.model.factory.BinaryCellFactory());Ext.define("GOL.model.factory.RainbowCellFactory",{extend:"GOL.model.factory.CellFactory",createModel:function(b,a){return new GOL.model.RainbowCell(b,a)}});GOL.registerCellFactory("Rainbow",new GOL.model.factory.RainbowCellFactory());Ext.define("GOL.model.factory.RandomCellFactory",{extend:"GOL.model.factory.CellFactory",createModel:function(b,a){switch(Math.ceil(Math.random()*3)){case 1:return new GOL.model.BinaryCell(b,a);case 2:return new GOL.model.AgingCell(b,a);case 3:return new GOL.model.RainbowCell(b,a)}}});GOL.registerCellFactory("Random",new GOL.model.factory.RandomCellFactory());Ext.define("GOL.view.TableMarkupFactory",{singleton:true,getMarkupHtml:function(c,b,d){var f=this.createList(0,b);var g=this.createList(0,d);var a=new Ext.XTemplate('<tpl for="cols"><td id="{[parent.prefix]}-{[parent.row]}-{.}"></td></tpl>');var e=new Ext.XTemplate('<tpl for="rows"><tr>{[this.getCellMarkup()]}</tr></tpl>',{rowCount:0,getCellMarkup:function(){return a.apply({cols:g,prefix:c,row:this.rowCount++})}});return e.apply({rows:f})},createList:function(d,b){for(var c=[],a=d;a<b;a++){c.push(a)}return c}});Ext.define("GOL.view.Grid",{extend:"Ext.container.Container",cellSize:12,mouseDown:false,initComponent:function(){this.loadingView=this.createLoadingView();this.gridView=this.createGridView();Ext.apply(this,{cellControllers:[],width:this.cellSize*this.model.getCols(),height:this.cellSize*this.model.getRows(),layout:"card",activeItem:0,items:[this.loadingView,this.gridView]});this.model.on("reconfigure",this.onReconfigure,this);this.callParent()},createLoadingView:function(){return Ext.create("widget.container",{layout:{type:"hbox",pack:"center",align:"middle"},items:{xtype:"progressbar",animate:false,text:"Loading...",width:300}})},createGridView:function(){return Ext.create("Ext.Component",{renderTpl:'<table class="gol-grid"><tbody></tbody></table>',renderSelectors:{tableEl:"table.gol-grid",tbodyEl:"table.gol-grid > tbody"}})},onRender:function(){this.callParent(arguments);this.loadedRows=0;Ext.defer(function(){this.fireEvent("beforeload");this.gridView.tbodyEl.update(GOL.view.TableMarkupFactory.getMarkupHtml(this.id+"-cell",this.model.getRows(),this.model.getCols()));this.gridView.el.on("mousedown",this.onTableCellMouseDown,this,{delegate:"td"});this.gridView.el.on("mouseover",this.onTableCellMouseOver,this,{delegate:"td"});Ext.defer(this.addRow,50,this)},100,this)},onReconfigure:function(){this.fireEvent("beforeload");this.getLayout().setActiveItem(this.loadingView);this.loadedRows=0;Ext.destroy(this.cellControllers);this.cellControllers=[];this.addRow()},addRow:function(){var a=this.model;var c=this.gridView.tbodyEl.select("tr:nth("+(this.loadedRows+1)+") td");var b=[];c.each(function(g,f,e){var d=new GOL.controller.Cell(a.getCell(this.loadedRows,e),Ext.get(g.dom));b.push(d)},this);this.cellControllers.push(b);this.loadedRows++;this.loadingView.down("progressbar").updateProgress(this.loadedRows/a.getRows());if(this.loadedRows<a.getRows()){Ext.Function.defer(this.addRow,10,this)}else{this.getLayout().setActiveItem(this.gridView);this.fireEvent("load")}},onTableCellMouseDown:function(a,b){a.preventDefault();this.fireEvent("cellmousedown",this.getCellFromTarget(b))},onTableCellMouseOver:function(a,b){a.preventDefault();this.fireEvent("cellmouseover",this.getCellFromTarget(b))},getCellFromTarget:function(b){var a=b.id.match(/cell-(\d+)-(\d+)/);return this.cellControllers[parseInt(a[1],10)][parseInt(a[2],10)]},destroy:function(){Ext.destroy(this.cellControllers)}});Ext.define("GOL.view.Cell",{mixins:{observable:"Ext.util.Observable"},constructor:function(a,b){this.callParent();this.el=b;this.model=a;this.model.on("commit",this.updateView,this);this.updateView()},getEl:function(){return this.el},getModel:function(){return this.model},destroy:function(){var a=this;a.clearListeners();a.el.dom.className="";a.el=null;a.model=null},updateView:GOL.abstractFn});Ext.define("GOL.view.BinaryCell",{extend:"GOL.view.Cell",aliveCls:"gol-cell-alive",deadCls:"gol-cell-dead",updateView:function(){var a=this.getEl().dom;if(this.model.isAlive()){a.className=this.aliveCls}else{a.className=this.deadCls}}});Ext.define("GOL.view.AgingCell",{extend:"GOL.view.Cell",updateView:function(){var a=this.getEl().dom;if(this.model.isAlive()){a.className="gol-cell-alive gol-cell-aging";a.style.backgroundColor=this.getAgeAsColor()}else{a.className="gol-cell-dead";a.style.backgroundColor="transparent"}},getAgeAsColor:function(){var a=Math.max(255-(this.getModel().getAge()*15),75);return Ext.String.format("rgb({0}, {1}, {2})",a,a,a)},destroy:function(){this.getEl().dom.style.backgroundColor="transparent";this.callParent()}});Ext.define("GOL.view.RainbowCell",{extend:"GOL.view.AgingCell",colors:["#dd0000","#fe6230","#fef600","#00bc00","#009bfe","#000083","#30009b"],getAgeAsColor:function(){return this.colors[this.model.getAge()-1]}});Ext.ns("GOL.view");GOL.view.CellFactory={create:function(b,d){var a=b.$className.replace(/^GOL\.model/,"GOL.view");var c=Ext.ClassManager.get(a);if(c!==null){return new c(b,d)}throw new Error("Could not determine view for model of type: "+b.$className)}};Ext.define("GOL.controller.Cell",{constructor:function(a,b){this.model=a;this.view=GOL.view.CellFactory.create(a,b)},kill:function(){if(this.model.isAlive()){this.model.revive().commit()}},revive:function(){if(!this.model.isAlive()){this.model.revive().commit()}},getView:function(){return this.view},destroy:function(){this.model.destroy();this.view.destroy();delete this.model;delete this.view}});Ext.define("GOL.controller.Grid",{mixins:{observable:"Ext.util.Observable"},mouseDown:false,constructor:function(a,b,d,c){this.model=new GOL.model.Grid(a,b,d,c);this.view=Ext.create("GOL.view.Grid",{model:this.model});this.addEvents("generationchange");this.relayEvents(this.model,["generationchange"]);this.setupMouseListeners()},applyPattern:function(a){this.model.applyPattern(a)},nextGeneration:function(){this.model.nextGeneration()},setupMouseListeners:function(){Ext.getDoc().on("mouseup",this.onDocumentMouseUp,this);this.view.on("cellmousedown",this.onCellMouseDown,this);this.view.on("cellmouseover",this.onCellMouseOver,this)},getView:function(){return this.view},onDocumentMouseUp:function(){this.mouseDown=false},onCellMouseDown:function(a){this.mouseDown=true;a.revive()},onCellMouseOver:function(a){if(this.mouseDown){a.revive()}},killAllCells:function(){this.model.killAllCells()},reconfigure:function(a){this.model.reconfigure(a)},destroy:function(){Ext.getDoc().un("mouseup",this.onDocumentMouseUp,this);this.view.un("cellmousedown",this.onCellMouseDown,this);this.view.un("cellmouseover",this.onCellMouseOver,this)}});